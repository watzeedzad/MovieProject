/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package int203.project.view;

import int203.project.etc.ConnectionBuilder;
import int203.pronject.model.Director;
import int203.pronject.model.Movie;
import int203.pronject.model.Soundtrack;
import int203.pronject.model.Starring;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DateFormat;
import java.util.Date;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.Timer;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author jiraw
 */
public class MovieManu extends javax.swing.JFrame {

    /**
     * Creates new form MovieManu
     */
    Connection conn = null;
    PreparedStatement pstm = null;
    ResultSet rs = null;

    public MovieManu() {
        initComponents();
        conn = ConnectionBuilder.getConnection();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bodyPanel = new javax.swing.JPanel();
        mainMenuPanel = new javax.swing.JPanel();
        searchMovie = new javax.swing.JButton();
        searchAward = new javax.swing.JButton();
        searchActor = new javax.swing.JButton();
        searchStudio = new javax.swing.JButton();
        searchSoundtrack = new javax.swing.JButton();
        searchDirector = new javax.swing.JButton();
        searchMoviePanel = new javax.swing.JPanel();
        backMainMovie = new javax.swing.JButton();
        radioSearchMovieId = new javax.swing.JRadioButton();
        radioSearchMovieName = new javax.swing.JRadioButton();
        textSearchMovieId = new javax.swing.JTextField();
        textSearchMovieName = new javax.swing.JTextField();
        searchMovieSubmit = new javax.swing.JButton();
        resultMovie = new javax.swing.JScrollPane();
        resultMovieTable = new javax.swing.JTable();
        searchActorPanel = new javax.swing.JPanel();
        backMainActor = new javax.swing.JButton();
        radioSearchActorId = new javax.swing.JRadioButton();
        radioSearchActorName = new javax.swing.JRadioButton();
        textSearchActorId = new javax.swing.JTextField();
        textSearchActorName = new javax.swing.JTextField();
        searchActorSubmit = new javax.swing.JButton();
        resultActor = new javax.swing.JScrollPane();
        resultActorTable = new javax.swing.JTable();
        searchDirectorPanel = new javax.swing.JPanel();
        backMainDirector = new javax.swing.JButton();
        radioSearchDirectorId = new javax.swing.JRadioButton();
        radioSearchDirectorName = new javax.swing.JRadioButton();
        textSearchDirectorId = new javax.swing.JTextField();
        textSearchDirectorName = new javax.swing.JTextField();
        searchDirectorSubmit = new javax.swing.JButton();
        resultDirector = new javax.swing.JScrollPane();
        resultDirectorTable = new javax.swing.JTable();
        searchSoundtrackPanel = new javax.swing.JPanel();
        backMainSoundtrack = new javax.swing.JButton();
        resultSoundtrack = new javax.swing.JScrollPane();
        resultSoundtrackTable = new javax.swing.JTable();
        searchSoundtrackSubmit = new javax.swing.JButton();
        radioSearchSoundtrackById = new javax.swing.JRadioButton();
        radioSearchSoundtrackByName = new javax.swing.JRadioButton();
        radioSearchSoundtrackByGenre = new javax.swing.JRadioButton();
        radioSearchSoundtrackByCompressor = new javax.swing.JRadioButton();
        textSearchSoundtrackById = new javax.swing.JTextField();
        textSearchSoundtrackByName = new javax.swing.JTextField();
        textSearchSoundtrackByGenre = new javax.swing.JTextField();
        textSearchSoundtrackByCompressor = new javax.swing.JTextField();
        searchAwardPanel = new javax.swing.JPanel();
        backMainAward = new javax.swing.JButton();
        searchStudioPanel = new javax.swing.JPanel();
        backMainStudio = new javax.swing.JButton();
        headerPanel = new javax.swing.JPanel();
        welcomeText = new javax.swing.JLabel();
        timeText = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("INT203-Project");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        bodyPanel.setLayout(new java.awt.CardLayout());

        searchMovie.setFont(new java.awt.Font("TH Mali Grade 6", 1, 35)); // NOI18N
        searchMovie.setText("Search Movie");
        searchMovie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchMovieActionPerformed(evt);
            }
        });

        searchAward.setFont(new java.awt.Font("TH Mali Grade 6", 1, 35)); // NOI18N
        searchAward.setText("Search Award");
        searchAward.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchAwardActionPerformed(evt);
            }
        });

        searchActor.setFont(new java.awt.Font("TH Mali Grade 6", 1, 35)); // NOI18N
        searchActor.setText("Search Actor");
        searchActor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchActorActionPerformed(evt);
            }
        });

        searchStudio.setFont(new java.awt.Font("TH Mali Grade 6", 1, 35)); // NOI18N
        searchStudio.setText("Search Studio");
        searchStudio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchStudioActionPerformed(evt);
            }
        });

        searchSoundtrack.setFont(new java.awt.Font("TH Mali Grade 6", 1, 35)); // NOI18N
        searchSoundtrack.setText("Search Soundtrack");
        searchSoundtrack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchSoundtrackActionPerformed(evt);
            }
        });

        searchDirector.setFont(new java.awt.Font("TH Mali Grade 6", 1, 35)); // NOI18N
        searchDirector.setText("Search Director");
        searchDirector.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchDirectorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout mainMenuPanelLayout = new javax.swing.GroupLayout(mainMenuPanel);
        mainMenuPanel.setLayout(mainMenuPanelLayout);
        mainMenuPanelLayout.setHorizontalGroup(
            mainMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainMenuPanelLayout.createSequentialGroup()
                .addContainerGap(539, Short.MAX_VALUE)
                .addGroup(mainMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(searchDirector, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(searchSoundtrack, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(searchStudio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(searchAward, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(searchActor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(searchMovie, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(493, 493, 493))
        );
        mainMenuPanelLayout.setVerticalGroup(
            mainMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainMenuPanelLayout.createSequentialGroup()
                .addContainerGap(165, Short.MAX_VALUE)
                .addComponent(searchActor)
                .addGap(18, 18, 18)
                .addComponent(searchAward)
                .addGap(18, 18, 18)
                .addComponent(searchStudio)
                .addGap(18, 18, 18)
                .addComponent(searchSoundtrack)
                .addGap(18, 18, 18)
                .addComponent(searchMovie)
                .addGap(18, 18, 18)
                .addComponent(searchDirector)
                .addGap(123, 123, 123))
        );

        bodyPanel.add(mainMenuPanel, "card3");

        backMainMovie.setFont(new java.awt.Font("TH Mali Grade 6", 1, 35)); // NOI18N
        backMainMovie.setText("Back");
        backMainMovie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backMainMovieActionPerformed(evt);
            }
        });

        radioSearchMovieId.setFont(new java.awt.Font("TH Mali Grade 6", 1, 35)); // NOI18N
        radioSearchMovieId.setText("Search by Movie ID");
        radioSearchMovieId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioSearchMovieIdActionPerformed(evt);
            }
        });

        radioSearchMovieName.setFont(new java.awt.Font("TH Mali Grade 6", 1, 35)); // NOI18N
        radioSearchMovieName.setText("Search by Movie Name");
        radioSearchMovieName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioSearchMovieNameActionPerformed(evt);
            }
        });

        searchMovieSubmit.setFont(new java.awt.Font("TH Mali Grade 6", 1, 35)); // NOI18N
        searchMovieSubmit.setText("Submit");
        searchMovieSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchMovieSubmitActionPerformed(evt);
            }
        });

        resultMovieTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        resultMovie.setViewportView(resultMovieTable);

        javax.swing.GroupLayout searchMoviePanelLayout = new javax.swing.GroupLayout(searchMoviePanel);
        searchMoviePanel.setLayout(searchMoviePanelLayout);
        searchMoviePanelLayout.setHorizontalGroup(
            searchMoviePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchMoviePanelLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(searchMoviePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(searchMoviePanelLayout.createSequentialGroup()
                        .addComponent(backMainMovie)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(searchMoviePanelLayout.createSequentialGroup()
                        .addGroup(searchMoviePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(radioSearchMovieId)
                            .addGroup(searchMoviePanelLayout.createSequentialGroup()
                                .addGap(24, 24, 24)
                                .addComponent(textSearchMovieId, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(24, 24, 24)
                        .addGroup(searchMoviePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(searchMoviePanelLayout.createSequentialGroup()
                                .addGap(24, 24, 24)
                                .addComponent(textSearchMovieName, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(radioSearchMovieName))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 348, Short.MAX_VALUE)
                        .addComponent(searchMovieSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(62, 62, 62))))
            .addGroup(searchMoviePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(resultMovie)
                .addContainerGap())
        );
        searchMoviePanelLayout.setVerticalGroup(
            searchMoviePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, searchMoviePanelLayout.createSequentialGroup()
                .addGroup(searchMoviePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(searchMoviePanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(searchMoviePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(searchMoviePanelLayout.createSequentialGroup()
                                .addGap(49, 49, 49)
                                .addGroup(searchMoviePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(textSearchMovieId, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(textSearchMovieName, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(searchMoviePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(radioSearchMovieId)
                                .addComponent(radioSearchMovieName))))
                    .addGroup(searchMoviePanelLayout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(searchMovieSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(resultMovie, javax.swing.GroupLayout.DEFAULT_SIZE, 450, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(backMainMovie)
                .addGap(24, 24, 24))
        );

        bodyPanel.add(searchMoviePanel, "card2");

        backMainActor.setFont(new java.awt.Font("TH Mali Grade 6", 1, 35)); // NOI18N
        backMainActor.setText("Back");
        backMainActor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backMainActorActionPerformed(evt);
            }
        });

        radioSearchActorId.setFont(new java.awt.Font("TH Mali Grade 6", 1, 35)); // NOI18N
        radioSearchActorId.setText("Search by Actor ID");
        radioSearchActorId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioSearchActorIdActionPerformed(evt);
            }
        });

        radioSearchActorName.setFont(new java.awt.Font("TH Mali Grade 6", 1, 35)); // NOI18N
        radioSearchActorName.setText("Search by Actor Name");
        radioSearchActorName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioSearchActorNameActionPerformed(evt);
            }
        });

        textSearchActorId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textSearchActorIdActionPerformed(evt);
            }
        });

        searchActorSubmit.setFont(new java.awt.Font("TH Mali Grade 6", 1, 35)); // NOI18N
        searchActorSubmit.setText("Submit");
        searchActorSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchActorSubmitActionPerformed(evt);
            }
        });

        resultActorTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        resultActor.setViewportView(resultActorTable);

        javax.swing.GroupLayout searchActorPanelLayout = new javax.swing.GroupLayout(searchActorPanel);
        searchActorPanel.setLayout(searchActorPanelLayout);
        searchActorPanelLayout.setHorizontalGroup(
            searchActorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchActorPanelLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(searchActorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(searchActorPanelLayout.createSequentialGroup()
                        .addComponent(backMainActor)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(searchActorPanelLayout.createSequentialGroup()
                        .addGroup(searchActorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(radioSearchActorId)
                            .addGroup(searchActorPanelLayout.createSequentialGroup()
                                .addGap(24, 24, 24)
                                .addComponent(textSearchActorId, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(24, 24, 24)
                        .addGroup(searchActorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(searchActorPanelLayout.createSequentialGroup()
                                .addGap(24, 24, 24)
                                .addComponent(textSearchActorName, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(radioSearchActorName))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 348, Short.MAX_VALUE)
                        .addComponent(searchActorSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(62, 62, 62))))
            .addGroup(searchActorPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(resultActor)
                .addContainerGap())
        );
        searchActorPanelLayout.setVerticalGroup(
            searchActorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, searchActorPanelLayout.createSequentialGroup()
                .addGroup(searchActorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(searchActorPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(searchActorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(searchActorPanelLayout.createSequentialGroup()
                                .addGap(49, 49, 49)
                                .addGroup(searchActorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(textSearchActorId, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(textSearchActorName, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(searchActorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(radioSearchActorId)
                                .addComponent(radioSearchActorName))))
                    .addGroup(searchActorPanelLayout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(searchActorSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(resultActor, javax.swing.GroupLayout.DEFAULT_SIZE, 450, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(backMainActor)
                .addGap(24, 24, 24))
        );

        bodyPanel.add(searchActorPanel, "card2");

        backMainDirector.setFont(new java.awt.Font("TH Mali Grade 6", 1, 35)); // NOI18N
        backMainDirector.setText("Back");
        backMainDirector.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backMainDirectorActionPerformed(evt);
            }
        });

        radioSearchDirectorId.setFont(new java.awt.Font("TH Mali Grade 6", 1, 35)); // NOI18N
        radioSearchDirectorId.setText("Search by Actor ID");
        radioSearchDirectorId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioSearchDirectorIdActionPerformed(evt);
            }
        });

        radioSearchDirectorName.setFont(new java.awt.Font("TH Mali Grade 6", 1, 35)); // NOI18N
        radioSearchDirectorName.setText("Search by Actor Name");
        radioSearchDirectorName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioSearchDirectorNameActionPerformed(evt);
            }
        });

        textSearchDirectorId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textSearchDirectorIdActionPerformed(evt);
            }
        });

        searchDirectorSubmit.setFont(new java.awt.Font("TH Mali Grade 6", 1, 35)); // NOI18N
        searchDirectorSubmit.setText("Submit");
        searchDirectorSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchDirectorSubmitActionPerformed(evt);
            }
        });

        resultDirectorTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        resultDirector.setViewportView(resultDirectorTable);

        javax.swing.GroupLayout searchDirectorPanelLayout = new javax.swing.GroupLayout(searchDirectorPanel);
        searchDirectorPanel.setLayout(searchDirectorPanelLayout);
        searchDirectorPanelLayout.setHorizontalGroup(
            searchDirectorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchDirectorPanelLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(searchDirectorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(searchDirectorPanelLayout.createSequentialGroup()
                        .addComponent(backMainDirector)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(searchDirectorPanelLayout.createSequentialGroup()
                        .addGroup(searchDirectorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(radioSearchDirectorId)
                            .addGroup(searchDirectorPanelLayout.createSequentialGroup()
                                .addGap(24, 24, 24)
                                .addComponent(textSearchDirectorId, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(24, 24, 24)
                        .addGroup(searchDirectorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(searchDirectorPanelLayout.createSequentialGroup()
                                .addGap(24, 24, 24)
                                .addComponent(textSearchDirectorName, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(radioSearchDirectorName))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 348, Short.MAX_VALUE)
                        .addComponent(searchDirectorSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(62, 62, 62))))
            .addGroup(searchDirectorPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(resultDirector)
                .addContainerGap())
        );
        searchDirectorPanelLayout.setVerticalGroup(
            searchDirectorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, searchDirectorPanelLayout.createSequentialGroup()
                .addGroup(searchDirectorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(searchDirectorPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(searchDirectorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(searchDirectorPanelLayout.createSequentialGroup()
                                .addGap(49, 49, 49)
                                .addGroup(searchDirectorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(textSearchDirectorId, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(textSearchDirectorName, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(searchDirectorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(radioSearchDirectorId)
                                .addComponent(radioSearchDirectorName))))
                    .addGroup(searchDirectorPanelLayout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(searchDirectorSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(resultDirector, javax.swing.GroupLayout.DEFAULT_SIZE, 450, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(backMainDirector)
                .addGap(24, 24, 24))
        );

        bodyPanel.add(searchDirectorPanel, "card2");

        backMainSoundtrack.setFont(new java.awt.Font("TH Mali Grade 6", 1, 35)); // NOI18N
        backMainSoundtrack.setText("Back");
        backMainSoundtrack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backMainSoundtrackActionPerformed(evt);
            }
        });

        resultSoundtrackTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        resultSoundtrack.setViewportView(resultSoundtrackTable);

        searchSoundtrackSubmit.setFont(new java.awt.Font("TH Mali Grade 6", 1, 35)); // NOI18N
        searchSoundtrackSubmit.setText("Submit");
        searchSoundtrackSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchSoundtrackSubmitActionPerformed(evt);
            }
        });

        radioSearchSoundtrackById.setFont(new java.awt.Font("TH Mali Grade 6", 1, 35)); // NOI18N
        radioSearchSoundtrackById.setText("Search By ID");
        radioSearchSoundtrackById.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioSearchSoundtrackByIdActionPerformed(evt);
            }
        });

        radioSearchSoundtrackByName.setFont(new java.awt.Font("TH Mali Grade 6", 1, 35)); // NOI18N
        radioSearchSoundtrackByName.setText("Search By Name");
        radioSearchSoundtrackByName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioSearchSoundtrackByNameActionPerformed(evt);
            }
        });

        radioSearchSoundtrackByGenre.setFont(new java.awt.Font("TH Mali Grade 6", 1, 35)); // NOI18N
        radioSearchSoundtrackByGenre.setText("Search By Genre");
        radioSearchSoundtrackByGenre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioSearchSoundtrackByGenreActionPerformed(evt);
            }
        });

        radioSearchSoundtrackByCompressor.setFont(new java.awt.Font("TH Mali Grade 6", 1, 35)); // NOI18N
        radioSearchSoundtrackByCompressor.setText("Search By Composor");
        radioSearchSoundtrackByCompressor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioSearchSoundtrackByCompressorActionPerformed(evt);
            }
        });

        textSearchSoundtrackById.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textSearchSoundtrackByIdActionPerformed(evt);
            }
        });

        textSearchSoundtrackByName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textSearchSoundtrackByNameActionPerformed(evt);
            }
        });

        textSearchSoundtrackByGenre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textSearchSoundtrackByGenreActionPerformed(evt);
            }
        });

        textSearchSoundtrackByCompressor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textSearchSoundtrackByCompressorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout searchSoundtrackPanelLayout = new javax.swing.GroupLayout(searchSoundtrackPanel);
        searchSoundtrackPanel.setLayout(searchSoundtrackPanelLayout);
        searchSoundtrackPanelLayout.setHorizontalGroup(
            searchSoundtrackPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, searchSoundtrackPanelLayout.createSequentialGroup()
                .addGroup(searchSoundtrackPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, searchSoundtrackPanelLayout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(backMainSoundtrack)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, searchSoundtrackPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(resultSoundtrack)))
                .addContainerGap())
            .addGroup(searchSoundtrackPanelLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(searchSoundtrackPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(radioSearchSoundtrackById)
                    .addComponent(textSearchSoundtrackById, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(searchSoundtrackPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(radioSearchSoundtrackByName)
                    .addComponent(textSearchSoundtrackByName, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addGroup(searchSoundtrackPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(textSearchSoundtrackByGenre, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(radioSearchSoundtrackByGenre))
                .addGap(45, 45, 45)
                .addGroup(searchSoundtrackPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(radioSearchSoundtrackByCompressor)
                    .addComponent(textSearchSoundtrackByCompressor, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 61, Short.MAX_VALUE)
                .addComponent(searchSoundtrackSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27))
        );
        searchSoundtrackPanelLayout.setVerticalGroup(
            searchSoundtrackPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, searchSoundtrackPanelLayout.createSequentialGroup()
                .addGroup(searchSoundtrackPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(searchSoundtrackPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(searchSoundtrackPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(radioSearchSoundtrackById)
                            .addComponent(radioSearchSoundtrackByName)
                            .addComponent(radioSearchSoundtrackByGenre)
                            .addComponent(radioSearchSoundtrackByCompressor))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(searchSoundtrackPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(textSearchSoundtrackById, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textSearchSoundtrackByName, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textSearchSoundtrackByGenre, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textSearchSoundtrackByCompressor, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(searchSoundtrackPanelLayout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(searchSoundtrackSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addComponent(resultSoundtrack, javax.swing.GroupLayout.PREFERRED_SIZE, 435, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(backMainSoundtrack)
                .addGap(24, 24, 24))
        );

        bodyPanel.add(searchSoundtrackPanel, "card2");

        backMainAward.setFont(new java.awt.Font("TH Mali Grade 6", 1, 35)); // NOI18N
        backMainAward.setText("Back");
        backMainAward.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backMainAwardActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout searchAwardPanelLayout = new javax.swing.GroupLayout(searchAwardPanel);
        searchAwardPanel.setLayout(searchAwardPanelLayout);
        searchAwardPanelLayout.setHorizontalGroup(
            searchAwardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchAwardPanelLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(backMainAward)
                .addContainerGap(1149, Short.MAX_VALUE))
        );
        searchAwardPanelLayout.setVerticalGroup(
            searchAwardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, searchAwardPanelLayout.createSequentialGroup()
                .addContainerGap(589, Short.MAX_VALUE)
                .addComponent(backMainAward)
                .addGap(24, 24, 24))
        );

        bodyPanel.add(searchAwardPanel, "card2");

        backMainStudio.setFont(new java.awt.Font("TH Mali Grade 6", 1, 35)); // NOI18N
        backMainStudio.setText("Back");
        backMainStudio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backMainStudioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout searchStudioPanelLayout = new javax.swing.GroupLayout(searchStudioPanel);
        searchStudioPanel.setLayout(searchStudioPanelLayout);
        searchStudioPanelLayout.setHorizontalGroup(
            searchStudioPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchStudioPanelLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(backMainStudio)
                .addContainerGap(1149, Short.MAX_VALUE))
        );
        searchStudioPanelLayout.setVerticalGroup(
            searchStudioPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, searchStudioPanelLayout.createSequentialGroup()
                .addContainerGap(589, Short.MAX_VALUE)
                .addComponent(backMainStudio)
                .addGap(24, 24, 24))
        );

        bodyPanel.add(searchStudioPanel, "card2");

        welcomeText.setFont(new java.awt.Font("TH Mali Grade 6", 1, 60)); // NOI18N
        welcomeText.setText("Welcome to Movie Data System");

        timeText.setFont(new java.awt.Font("TH Mali Grade 6", 1, 30)); // NOI18N
        timeText.setText("<TIME>");
        timeText.setText(clock(timeText));

        javax.swing.GroupLayout headerPanelLayout = new javax.swing.GroupLayout(headerPanel);
        headerPanel.setLayout(headerPanelLayout);
        headerPanelLayout.setHorizontalGroup(
            headerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(headerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, headerPanelLayout.createSequentialGroup()
                        .addComponent(timeText)
                        .addGap(54, 54, 54))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, headerPanelLayout.createSequentialGroup()
                        .addComponent(welcomeText)
                        .addGap(338, 338, 338))))
        );
        headerPanelLayout.setVerticalGroup(
            headerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, headerPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(timeText)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(welcomeText)
                .addGap(24, 24, 24))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bodyPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(headerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(headerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bodyPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void backMainMovieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backMainMovieActionPerformed
        clickMainBack(bodyPanel, mainMenuPanel);
        // TODO add your handling code here:
    }//GEN-LAST:event_backMainMovieActionPerformed

    private void backMainAwardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backMainAwardActionPerformed
        clickMainBack(bodyPanel, mainMenuPanel);
        // TODO add your handling code here:
    }//GEN-LAST:event_backMainAwardActionPerformed

    private void backMainStudioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backMainStudioActionPerformed
        clickMainBack(bodyPanel, mainMenuPanel);
        // TODO add your handling code here:
    }//GEN-LAST:event_backMainStudioActionPerformed

    private void backMainSoundtrackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backMainSoundtrackActionPerformed
        clickMainBack(bodyPanel, mainMenuPanel);
        // TODO add your handling code here:
    }//GEN-LAST:event_backMainSoundtrackActionPerformed

    private void searchActorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchActorActionPerformed
        clickMainBack(bodyPanel, searchActorPanel);
        // TODO add your handling code here:
    }//GEN-LAST:event_searchActorActionPerformed

    private void searchAwardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchAwardActionPerformed
        clickMainBack(bodyPanel, searchAwardPanel);
        // TODO add your handling code here:
    }//GEN-LAST:event_searchAwardActionPerformed

    private void searchStudioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchStudioActionPerformed
        clickMainBack(bodyPanel, searchStudioPanel);
        // TODO add your handling code here:
    }//GEN-LAST:event_searchStudioActionPerformed

    private void searchSoundtrackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchSoundtrackActionPerformed
        clickMainBack(bodyPanel, searchSoundtrackPanel);
        // TODO add your handling code here:
    }//GEN-LAST:event_searchSoundtrackActionPerformed

    private void searchMovieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchMovieActionPerformed
        clickMainBack(bodyPanel, searchMoviePanel);
        // TODO add your handling code here:
    }//GEN-LAST:event_searchMovieActionPerformed

    private void searchDirectorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchDirectorActionPerformed
        clickMainBack(bodyPanel, searchDirectorPanel);
        // TODO add your handling code here:
    }//GEN-LAST:event_searchDirectorActionPerformed

    private void radioSearchMovieNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioSearchMovieNameActionPerformed
        if (radioSearchMovieName.isSelected()) {
            textSearchMovieName.setEnabled(true);
            textSearchMovieId.setEnabled(false);
        }
        radioSearchMovieId.setSelected(false);
        // TODO add your handling code here:
    }//GEN-LAST:event_radioSearchMovieNameActionPerformed

    private void radioSearchMovieIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioSearchMovieIdActionPerformed
        if (radioSearchMovieId.isSelected()) {
            textSearchMovieId.setEnabled(true);
            textSearchMovieName.setEnabled(false);
        }
        radioSearchMovieName.setSelected(false);
        // TODO add your handling code here:
    }//GEN-LAST:event_radioSearchMovieIdActionPerformed

    private void searchMovieSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchMovieSubmitActionPerformed
        try {
            String searchInputName = "";
            int searchInputId;
            if (!radioSearchMovieId.isSelected() && !radioSearchMovieName.isSelected()) {
                rs = Movie.searchMovie();
                resultMovieTable.setModel(DbUtils.resultSetToTableModel(rs));
            } else if (radioSearchMovieId.isSelected()) {
                searchInputId = Integer.parseInt(textSearchMovieId.getText());
                rs = Movie.searchMovieById(searchInputId);
                if (rs.next()) {
                    resultMovieTable.setModel(DbUtils.resultSetToTableModel(rs));
                } else {
                    JOptionPane.showMessageDialog(null, "Not Found!");
                }
            } else {
                searchInputName = textSearchMovieName.getText();
                if (searchInputName.length() == 0) {
                    searchInputName = "?";
                }
                rs = Movie.searchMovieByName(searchInputName);
                if (rs.next()) {
                    resultMovieTable.setModel(DbUtils.resultSetToTableModel(rs));
                } else {
                    JOptionPane.showMessageDialog(null, "Not Found!");
                }
            }
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(null, "Error!");
            System.err.println(ex);
        } catch (SQLException ex) {
            System.err.println(ex);
            JOptionPane.showMessageDialog(null, "Error!");
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_searchMovieSubmitActionPerformed

    private void backMainActorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backMainActorActionPerformed
        clickMainBack(bodyPanel, mainMenuPanel);
// TODO add your handling code here:
    }//GEN-LAST:event_backMainActorActionPerformed

    private void radioSearchActorIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioSearchActorIdActionPerformed
        if (radioSearchActorId.isSelected()) {
            textSearchActorId.setEnabled(true);
            textSearchActorName.setEnabled(false);
        }
        radioSearchActorName.setSelected(false);
        // TODO add your handling code here:
    }//GEN-LAST:event_radioSearchActorIdActionPerformed

    private void radioSearchActorNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioSearchActorNameActionPerformed
        if (radioSearchActorName.isSelected()) {
            textSearchActorId.setEnabled(false);
            textSearchActorName.setEnabled(true);
        }
        radioSearchActorId.setSelected(false);
        // TODO add your handling code here:
    }//GEN-LAST:event_radioSearchActorNameActionPerformed

    private void searchActorSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchActorSubmitActionPerformed
        try {
            String searchInputName = "";
            int searchInputId;
            if (!radioSearchActorId.isSelected() && !radioSearchActorName.isSelected()) {
                rs = Starring.searchActor();
                resultActorTable.setModel(DbUtils.resultSetToTableModel(rs));
            } else if (radioSearchActorId.isSelected()) {
                searchInputId = Integer.parseInt(textSearchActorId.getText());
                rs = Starring.searchActorById(searchInputId);
                if (rs.next()) {
                    resultActorTable.setModel(DbUtils.resultSetToTableModel(rs));
                } else {
                    JOptionPane.showMessageDialog(null, "Not Found!");
                }
            } else {
                searchInputName = textSearchActorName.getText();
                if (searchInputName.length() == 0) {
                    searchInputName = "?";
                }
                rs = Starring.searchActorByName(searchInputName);
                if (rs.next()) {
                    resultActorTable.setModel(DbUtils.resultSetToTableModel(rs));
                } else {
                    JOptionPane.showMessageDialog(null, "Not Found!");
                }
            }
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(null, "Error!");
            System.err.println(ex);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error!");
            System.err.println(ex);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_searchActorSubmitActionPerformed

    private void textSearchActorIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textSearchActorIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textSearchActorIdActionPerformed

    private void backMainDirectorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backMainDirectorActionPerformed
        clickMainBack(bodyPanel, mainMenuPanel);
        // TODO add your handling code here:
    }//GEN-LAST:event_backMainDirectorActionPerformed

    private void radioSearchDirectorIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioSearchDirectorIdActionPerformed
        if (radioSearchDirectorId.isSelected()) {
            textSearchDirectorId.setEnabled(true);
            textSearchDirectorName.setEnabled(false);
        }
        radioSearchDirectorName.setSelected(false);
        // TODO add your handling code here:
    }//GEN-LAST:event_radioSearchDirectorIdActionPerformed

    private void radioSearchDirectorNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioSearchDirectorNameActionPerformed
        if (radioSearchDirectorName.isSelected()) {
            textSearchDirectorId.setEnabled(false);
            textSearchDirectorName.setEnabled(true);
        }
        radioSearchDirectorId.setSelected(false);
        // TODO add your handling code here:
    }//GEN-LAST:event_radioSearchDirectorNameActionPerformed

    private void textSearchDirectorIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textSearchDirectorIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textSearchDirectorIdActionPerformed

    private void searchDirectorSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchDirectorSubmitActionPerformed
        try {
            String searchInputName = "";
            int searchInputId;
            if (!radioSearchDirectorId.isSelected() && !radioSearchDirectorName.isSelected()) {
                rs = Director.searchDirector();
                resultDirectorTable.setModel(DbUtils.resultSetToTableModel(rs));
            } else if (radioSearchDirectorId.isSelected()) {
                searchInputId = Integer.parseInt(textSearchDirectorId.getText());
                rs = Director.searchDirectorById(searchInputId);
                if (rs.next()) {
                    resultDirectorTable.setModel(DbUtils.resultSetToTableModel(rs));
                } else {
                    JOptionPane.showMessageDialog(null, "Not Found!");
                }
            } else {
                searchInputName = textSearchDirectorName.getText();
                if (searchInputName.length() == 0) {
                    searchInputName = "?";
                }
                rs = Director.searchDirectorByName(searchInputName);
                if (rs.next()) {
                    resultDirectorTable.setModel(DbUtils.resultSetToTableModel(rs));
                } else {
                    JOptionPane.showMessageDialog(null, "Not Found!");
                }
            }
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(null, "Error!");
            System.err.println(ex);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error!");
            System.err.println(ex);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_searchDirectorSubmitActionPerformed

    private void searchSoundtrackSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchSoundtrackSubmitActionPerformed
        try {
            int id;
            String name;
            String genre;
            String compressor;
            if (!radioSearchSoundtrackById.isSelected() && !radioSearchSoundtrackByName.isSelected() && !radioSearchSoundtrackByGenre.isSelected() && !radioSearchSoundtrackByCompressor.isSelected()) {
                Soundtrack.searchSoundtrack();
            } else if (radioSearchSoundtrackById.isSelected()) {
                id = Integer.parseInt(textSearchSoundtrackById.getText());
                rs = Soundtrack.searchSoundtrackById(id);
                if (rs.next()) {
                    resultDirectorTable.setModel(DbUtils.resultSetToTableModel(rs));
                } else {
                    JOptionPane.showMessageDialog(null, "Not Found!");
                }
            } else if (radioSearchSoundtrackByName.isSelected()) {
                name = textSearchSoundtrackByName.getText();
                rs = Soundtrack.searchSoundtrackByName(name);
                if (rs.next()) {
                    resultDirectorTable.setModel(DbUtils.resultSetToTableModel(rs));
                } else {
                    JOptionPane.showMessageDialog(null, "Not Found!");
                }
            } else if (radioSearchSoundtrackByGenre.isSelected()) {
                genre = textSearchSoundtrackByGenre.getText();
                rs = Soundtrack.searchSoundtrackByGenre(genre);
                if (rs.next()) {
                    resultDirectorTable.setModel(DbUtils.resultSetToTableModel(rs));
                } else {
                    JOptionPane.showMessageDialog(null, "Not Found!");
                }
            } else {
                compressor = textSearchSoundtrackByCompressor.getText();
                rs = Soundtrack.searchSoundtrackByCompressor(compressor);
                if (rs.next()) {
                    resultDirectorTable.setModel(DbUtils.resultSetToTableModel(rs));
                } else {
                    JOptionPane.showMessageDialog(null, "Not Found!");
                }
            }
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(null, "Error!");
            System.err.println(ex);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error!");
            System.err.println(ex);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_searchSoundtrackSubmitActionPerformed

    private void radioSearchSoundtrackByIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioSearchSoundtrackByIdActionPerformed
        if (radioSearchSoundtrackById.isSelected()) {
            textSearchSoundtrackById.setEnabled(true);
            textSearchSoundtrackByName.setEnabled(false);
            textSearchSoundtrackByGenre.setEnabled(false);
            textSearchSoundtrackByCompressor.setEnabled(false);
        }
        radioSearchSoundtrackById.setEnabled(true);
        radioSearchSoundtrackByName.setEnabled(false);
        radioSearchSoundtrackByGenre.setEnabled(false);
        radioSearchSoundtrackByCompressor.setEnabled(false);
        // TODO add your handling code here:
    }//GEN-LAST:event_radioSearchSoundtrackByIdActionPerformed

    private void radioSearchSoundtrackByNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioSearchSoundtrackByNameActionPerformed
        if (radioSearchSoundtrackByName.isSelected()) {
            textSearchSoundtrackById.setEnabled(false);
            textSearchSoundtrackByName.setEnabled(true);
            textSearchSoundtrackByGenre.setEnabled(false);
            textSearchSoundtrackByCompressor.setEnabled(false);
        }
        radioSearchSoundtrackById.setEnabled(false);
        radioSearchSoundtrackByName.setEnabled(true);
        radioSearchSoundtrackByGenre.setEnabled(false);
        radioSearchSoundtrackByCompressor.setEnabled(false);
        // TODO add your handling code here:
    }//GEN-LAST:event_radioSearchSoundtrackByNameActionPerformed

    private void radioSearchSoundtrackByGenreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioSearchSoundtrackByGenreActionPerformed
        if (radioSearchSoundtrackByGenre.isSelected()) {
            textSearchSoundtrackById.setEnabled(false);
            textSearchSoundtrackByName.setEnabled(false);
            textSearchSoundtrackByGenre.setEnabled(true);
            textSearchSoundtrackByCompressor.setEnabled(false);
        }
        radioSearchSoundtrackById.setEnabled(false);
        radioSearchSoundtrackByName.setEnabled(false);
        radioSearchSoundtrackByGenre.setEnabled(true);
        radioSearchSoundtrackByCompressor.setEnabled(false);
        // TODO add your handling code here:
    }//GEN-LAST:event_radioSearchSoundtrackByGenreActionPerformed

    private void radioSearchSoundtrackByCompressorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioSearchSoundtrackByCompressorActionPerformed
        if (radioSearchSoundtrackByGenre.isSelected()) {
            textSearchSoundtrackById.setEnabled(false);
            textSearchSoundtrackByName.setEnabled(false);
            textSearchSoundtrackByGenre.setEnabled(false);
            textSearchSoundtrackByCompressor.setEnabled(true);
        }
        radioSearchSoundtrackById.setEnabled(false);
        radioSearchSoundtrackByName.setEnabled(false);
        radioSearchSoundtrackByGenre.setEnabled(false);
        radioSearchSoundtrackByCompressor.setEnabled(true);
        // TODO add your handling code here:
    }//GEN-LAST:event_radioSearchSoundtrackByCompressorActionPerformed

    private void textSearchSoundtrackByIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textSearchSoundtrackByIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textSearchSoundtrackByIdActionPerformed

    private void textSearchSoundtrackByNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textSearchSoundtrackByNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textSearchSoundtrackByNameActionPerformed

    private void textSearchSoundtrackByGenreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textSearchSoundtrackByGenreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textSearchSoundtrackByGenreActionPerformed

    private void textSearchSoundtrackByCompressorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textSearchSoundtrackByCompressorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textSearchSoundtrackByCompressorActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws ClassNotFoundException, InstantiationException, IllegalAccessException, UnsupportedLookAndFeelException {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());    //  ใช้ UI ตามแบบ default ของระบบ OS ใดๆและเลิกใช้ UI แบบ Nimbus
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            ex.printStackTrace();
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MovieManu().setVisible(true);
            }
        });
    }

    public String clock(final JLabel label) {
        Timer timer = new Timer(0, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                label.setText(DateFormat.getDateTimeInstance().format(new Date()));
            }
        });
        timer.start();
        return "";
    }

    public void clickMainBack(JPanel panelSide, JPanel panelFunction) {
        panelSide.removeAll();
        panelSide.repaint();
        panelSide.revalidate();
        panelSide.add(panelFunction);
        panelSide.repaint();
        panelSide.revalidate();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backMainActor;
    private javax.swing.JButton backMainAward;
    private javax.swing.JButton backMainDirector;
    private javax.swing.JButton backMainMovie;
    private javax.swing.JButton backMainSoundtrack;
    private javax.swing.JButton backMainStudio;
    private javax.swing.JPanel bodyPanel;
    private javax.swing.JPanel headerPanel;
    private javax.swing.JPanel mainMenuPanel;
    private javax.swing.JRadioButton radioSearchActorId;
    private javax.swing.JRadioButton radioSearchActorName;
    private javax.swing.JRadioButton radioSearchDirectorId;
    private javax.swing.JRadioButton radioSearchDirectorName;
    private javax.swing.JRadioButton radioSearchMovieId;
    private javax.swing.JRadioButton radioSearchMovieName;
    private javax.swing.JRadioButton radioSearchSoundtrackByCompressor;
    private javax.swing.JRadioButton radioSearchSoundtrackByGenre;
    private javax.swing.JRadioButton radioSearchSoundtrackById;
    private javax.swing.JRadioButton radioSearchSoundtrackByName;
    private javax.swing.JScrollPane resultActor;
    private javax.swing.JTable resultActorTable;
    private javax.swing.JScrollPane resultDirector;
    private javax.swing.JTable resultDirectorTable;
    private javax.swing.JScrollPane resultMovie;
    private javax.swing.JTable resultMovieTable;
    private javax.swing.JScrollPane resultSoundtrack;
    private javax.swing.JTable resultSoundtrackTable;
    private javax.swing.JButton searchActor;
    private javax.swing.JPanel searchActorPanel;
    private javax.swing.JButton searchActorSubmit;
    private javax.swing.JButton searchAward;
    private javax.swing.JPanel searchAwardPanel;
    private javax.swing.JButton searchDirector;
    private javax.swing.JPanel searchDirectorPanel;
    private javax.swing.JButton searchDirectorSubmit;
    private javax.swing.JButton searchMovie;
    private javax.swing.JPanel searchMoviePanel;
    private javax.swing.JButton searchMovieSubmit;
    private javax.swing.JButton searchSoundtrack;
    private javax.swing.JPanel searchSoundtrackPanel;
    private javax.swing.JButton searchSoundtrackSubmit;
    private javax.swing.JButton searchStudio;
    private javax.swing.JPanel searchStudioPanel;
    private javax.swing.JTextField textSearchActorId;
    private javax.swing.JTextField textSearchActorName;
    private javax.swing.JTextField textSearchDirectorId;
    private javax.swing.JTextField textSearchDirectorName;
    private javax.swing.JTextField textSearchMovieId;
    private javax.swing.JTextField textSearchMovieName;
    private javax.swing.JTextField textSearchSoundtrackByCompressor;
    private javax.swing.JTextField textSearchSoundtrackByGenre;
    private javax.swing.JTextField textSearchSoundtrackById;
    private javax.swing.JTextField textSearchSoundtrackByName;
    private javax.swing.JLabel timeText;
    private javax.swing.JLabel welcomeText;
    // End of variables declaration//GEN-END:variables
}
